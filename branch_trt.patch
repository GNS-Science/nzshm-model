diff --git a/nzshm_model/logic_tree/gmcm_logic_tree/logic_tree.py b/nzshm_model/logic_tree/gmcm_logic_tree/logic_tree.py
index 9bc07b4..8dbbde7 100644
--- a/nzshm_model/logic_tree/gmcm_logic_tree/logic_tree.py
+++ b/nzshm_model/logic_tree/gmcm_logic_tree/logic_tree.py
@@ -19,10 +19,12 @@ class GMCMBranch(Branch):
     Attributes:
         gsim_name: the name of the ground motion model
         gsim_args: a dict of argument names and values
+        tectonic_region_type: the tectonic region type the ground motion model applies to
     """
 
     gsim_name: str = ""
     gsim_args: Dict[str, Any] = field(default_factory=dict)
+    tectonic_region_type: str = ""
 
     def filtered_branch(self, logic_tree, branch_set) -> 'GMCMFilteredBranch':
         """get a filtered branch containing reference to parent instances.
@@ -46,8 +48,14 @@ class GMCMBranchSet(BranchSet):
         branches: list of branches.
     """
 
-    tectonic_region_type: str = ""  # need a default becasue base class has a memeber with a default
     branches: List[GMCMBranch] = field(default_factory=list)
+    
+    def __post_init__(self):
+        """Verify that the branch set only has one TRT"""
+        trts = {branch.tectonic_region_type for branch in self.branches}
+        if len(trts) != 1:
+            raise Exception("for GMCMBranchSets all TRTs in a branch set must be the same")
+
 
 
 @dataclass
@@ -77,6 +85,7 @@ class GMCMLogicTree(LogicTree):
                         branch.gsim_args[k] = float(v)
 
         return self
+    
 
     def psha_adapter(self, provider: Type[PshaAdapterInterface], **kwargs) -> "PshaAdapterInterface":
         """get a PSHA adapter for this instance.
